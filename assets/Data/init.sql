-- SQLite
--Independent Data
CREATE TABLE IF NOT EXISTS MEMEBER(-- possibly make user name to make login faster
    ID INTEGER  PRIMARY KEY AUTOINCREMENT,
    FNAME VARCHAR(20)  NOT NULL,
    LNAME VARCHAR(20)  NOT NULL,
    ADDRESS TEXT NOT NULL,
    UNIQUE(FNAME,LNAME)
);

CREATE TABLE IF NOT EXISTS ACCOUNT_TYPE(
    ID INTEGER  PRIMARY KEY AUTOINCREMENT,
    DESCIPTION VARCHAR(20)  NOT NULL,
    UNIQUE(ID,DESCIPTION)
);

CREATE TABLE IF NOT EXISTS TELLER(
    ID INTEGER  PRIMARY KEY AUTOINCREMENT,
    USER VARCHAR(20)  NOT NULL,
    PIN CHAR(4) NOT NULL
);

CREATE TABLE IF NOT EXISTS BANK_ACCOUNT(
    ID INTEGER  PRIMARY KEY AUTOINCREMENT,
    PIN CHAR(4) NOT NULL,
    USERNAME VARCHAR(20),
    DATE DATE NOT NULL
);
--dependent Data
CREATE TABLE IF NOT EXISTS OWNS(
    ID INTEGER  PRIMARY KEY AUTOINCREMENT,
    BANK_ACCOUNTID INTEGER,
    MEMEBERID INTGER,
    FOREIGN KEY (BANK_ACCOUNTID) REFERENCES BANK_ACCOUNT(ID) ON DELETE CASCADE,
    FOREIGN KEY (MEMEBERID) REFERENCES  MEMEBER(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS ASSOCIATED(
    ID INTEGER  PRIMARY KEY AUTOINCREMENT,
    BANK_ACCOUNTID INTEGER,
    TYPE INTEGER,
    FOREIGN KEY (BANK_ACCOUNTID) REFERENCES BANK_ACCOUNT(ID) ON DELETE CASCADE,   
    FOREIGN KEY (TYPE) REFERENCES  ACCOUNT(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS ACCOUNT(
    ID INTEGER  PRIMARY KEY AUTOINCREMENT,
    AMOUNT NUMERIC(10,2) NOT NULL,
    DATE DATE NOT NULL,
    TYPE  INTEGER,
    FOREIGN KEY (TYPE) REFERENCES ACCOUNT_TYPE(ID) ON DELETE CASCADE,
    CHECK (AMOUNT >= 0.0)
);

CREATE TABLE IF NOT EXISTS TRANSACTION_HISORY(
    ID INTEGER  PRIMARY KEY AUTOINCREMENT,
    ACCOUNTID INTEGER,
    AMOUNT NUMERIC(4,2) NOT NULL,
    DATE DATE, 
    FOREIGN KEY (ACCOUNTID) REFERENCES ACCOUNT(ID) ON DELETE CASCADE 
);
--insert data
INSERT INTO TELLER(USER,PIN) VALUES
    ('carl','1234'),
    ('brady','4321'),
    ('bobcat','0404');

INSERT INTO ACCOUNT_TYPE(DESCIPTION)  VALUES
    ('Savings'),
    ('Checkings');

INSERT INTO MEMEBER(FNAME,LNAME,ADDRESS) VALUES
    ('Joe','Biden','703 Heritage Street West Chicago, IL 60185'),
    ('Donald','Trump','8807 Center St. Grand Island, NE 68801'),
    ('Barack','Obama','212 Logan Ave. Voorhees, NJ 08043 '),
    ('George','W Bush','644 South Lilac St. Midlothian, VA 23112'),
    ('Bill','Clinton','8067 Bowman Avenue Hamden, CT 06514 '),
    ('George','H.W Bush','920 Fairfield Ave. Thibodaux, LA 70301'),
    ('Rondald','Reagan','944 Hillside Lane Kalamazoo, MI 49009 '),
    ('Jimmy','Carter',' 92 Sutor Drive Mundelein, IL 60060');

INSERT INTO BANK_ACCOUNT VALUES
    (100,'1234','SLEEPY JOE','11/18/2021'); 
INSERT INTO BANK_ACCOUNT(DATE,PIN,USERNAME) VALUES
    ('11/18/2017','4321','Tupae Man'),
    ('11/18/2009','8190','OLama Jama'),
    ('11/18/2001','0911','Bushes Beans' ),
    ('11/18/1993','1122','Clintoton'),
    ('11/18/1989','2211','Big Bush89'),
    ('11/18/1981','2121','Real Regan'),
    ('11/18/1977','1212','JCarter');

INSERT INTO ACCOUNT VALUES
    (250,65651.00,'11/18/2021',1);
INSERT INTO ACCOUNT(AMOUNT,DATE,TYPE) VALUES
    (6896.75,'11/18/2021',2),
    (9896.99,'11/18/2017',1),
    (5050.01,'11/18/2017',2),
    (700.29,'11/18/2009',1),
    (2050.20,'11/18/2009',2),
    (100.56,'11/18/2001',1),
    (1111.11,'11/18/2001',2),
    (1919.22,'11/18/1993',1),
    (8099.49,'11/18/1993',2),
    (6356.23,'11/18/1989',1),
    (6564.76,'11/18/1989',2),
    (8941.60,'11/18/1981',1),
    (9889.82,'11/18/1981',2),
    (9841.15,'11/18/1977',1),
    (7787.22,'11/18/1977',2);

INSERT INTO OWNS(BANK_ACCOUNTID,MEMEBERID) VALUES
    (100,1),
    (101,2),
    (102,3),
    (103,4),
    (104,5),
    (105,6),
    (106,7),
    (107,8);

INSERT INTO ASSOCIATED(BANK_ACCOUNTID,TYPE) VALUES
    (100,250),
    (100,251),
    (101,252),
    (101,253),
    (102,254),
    (102,255),
    (103,256),
    (103,257),
    (104,258),
    (104,259),
    (105,260),
    (105,261),
    (106,262),
    (106,263),
    (107,264),
    (107,265);

--veiws reset
DROP VIEW IF EXISTS CUSTOMER_DATA;
DROP VIEW IF EXISTS BANK_DATA;
--veiws
-- member owns bank_account -> fname,lname,address,date
CREATE VIEW CUSTOMER_DATA  AS
    SELECT M.FNAME,M.LNAME,M.ADDRESS,B.ID AS ACC_NUM,B.DATE FROM MEMEBER M JOIN OWNS ON OWNS.MEMEBERID = M.ID JOIN BANK_ACCOUNT B ON B.ID = OWNS.BANK_ACCOUNTID;
-- bank_account associstaed with accounts_types -> account# amount Date acount created and type descripton  
CREATE VIEW BANK_DATA AS 
    SELECT B.ID, A.AMOUNT,A.DATE,T.DESCIPTION FROM ASSOCIATED JOIN BANK_ACCOUNT B ON B.ID = ASSOCIATED.BANK_ACCOUNTID JOIN ACCOUNT A ON ASSOCIATED.TYPE = A.ID JOIN ACCOUNT_TYPE T ON A.TYPE = T.ID;